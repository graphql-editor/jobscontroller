/*
Copyright GrpahQL Editor.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/graphql-editor/jobscontroller/pkg/apis/jobscontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FunctionJobLister helps list FunctionJobs.
// All objects returned here must be treated as read-only.
type FunctionJobLister interface {
	// List lists all FunctionJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FunctionJob, err error)
	// FunctionJobs returns an object that can list and get FunctionJobs.
	FunctionJobs(namespace string) FunctionJobNamespaceLister
	FunctionJobListerExpansion
}

// functionJobLister implements the FunctionJobLister interface.
type functionJobLister struct {
	indexer cache.Indexer
}

// NewFunctionJobLister returns a new FunctionJobLister.
func NewFunctionJobLister(indexer cache.Indexer) FunctionJobLister {
	return &functionJobLister{indexer: indexer}
}

// List lists all FunctionJobs in the indexer.
func (s *functionJobLister) List(selector labels.Selector) (ret []*v1alpha1.FunctionJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FunctionJob))
	})
	return ret, err
}

// FunctionJobs returns an object that can list and get FunctionJobs.
func (s *functionJobLister) FunctionJobs(namespace string) FunctionJobNamespaceLister {
	return functionJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FunctionJobNamespaceLister helps list and get FunctionJobs.
// All objects returned here must be treated as read-only.
type FunctionJobNamespaceLister interface {
	// List lists all FunctionJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FunctionJob, err error)
	// Get retrieves the FunctionJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FunctionJob, error)
	FunctionJobNamespaceListerExpansion
}

// functionJobNamespaceLister implements the FunctionJobNamespaceLister
// interface.
type functionJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FunctionJobs in the indexer for a given namespace.
func (s functionJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FunctionJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FunctionJob))
	})
	return ret, err
}

// Get retrieves the FunctionJob from the indexer for a given namespace and name.
func (s functionJobNamespaceLister) Get(name string) (*v1alpha1.FunctionJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("functionjob"), name)
	}
	return obj.(*v1alpha1.FunctionJob), nil
}
